!function(t){if(!t.preview){t.assetContainers.main.isExpandable=!0;try{var e=!!window.frameElement,n=e?window.frameElement.parentNode.firstChild.firstChild.contentWindow:window;t.overrides=t.overrides||{},t.overrides.displayWindowTarget=n}catch(t){console.warn("Failed to find target iframe in player environment: Has the structure changed?\n",t)}}var i=!1;if(!t.overrides||t.overrides.displayWindowTarget!=self)for(var a in t.assetContainers)if(t.assetContainers.hasOwnProperty(a)){var o=t.assetContainers[a];if("inlineDiv"!=o.type||o.isExpandable){i=!0;break}}if(t.overrides&&t.overrides.displayWindowTarget){var d=t.overrides.displayWindowTarget;d="undefined"!=typeof adtechIframeHashArray&&self!=top?d.parent:d}else{for(var r=null,s=parent;void 0!=s;){try{var c=s.document;c&&(r=s)}catch(t){}s=s==top?null:s.parent}var d=r||top}var h=!1;try{var c=d.document;c&&(h=!0)}catch(t){}var l=i&&self!=top&&h?d:self;l.com=l.com||{},l.com.adtech=l.com.adtech||{},l.com.adtech.AdtechCustomAd$AD_ID$=function(){};var p=l.com.adtech.AdtechCustomAd$AD_ID$;p.prototype.elem={},p.prototype.elem.topWin=window.parent,p.prototype.elem.targetWindow=l,p.prototype.tools={events:{triggerEvent:function(t,e){var n;document.createEvent?(n=document.createEvent("HTMLEvents"),n.initEvent(e,!0,!0)):document.createEventObject&&(n=document.createEventObject(),n.eventType=e),n.eventName=e,t.dispatchEvent?t.dispatchEvent(n):t.fireEvent&&htmlEvents["on"+e]?t.fireEvent("on"+n.eventType,n):t[e]?t[e]():t["on"+e]&&t["on"+e]()},addEvent:function(t,e,n){t.addEventListener?t.addEventListener(e,n,!1):t.attachEvent&&htmlEvents["on"+e]?t.attachEvent("on"+e,n):t["on"+e]=n},removeEvent:function(t,e,n){t.removeventListener?t.removeEventListener(e,n,!1):t.detachEvent&&htmlEvents["on"+e]?t.detachEvent("on"+e,n):t["on"+e]=null}},mask:function(t,e){},getPercentage:function(t,e){return t/100*e},getSizeStyle:function(t,e){var n=(this.tools,{}),i=parseInt(t,10),t=t.split(i)[1];return data={num:isNaN(parseFloat(i))?0:i,val:void 0!==t?t:"px"},"%"==data.val?(n.px=Math.round(e/100*data.num),n.percent=data.num):(n.px=data.num,n.percent=data.num/e*100),n},getViewportSize:function(t){if(t=t||window,null!=t.innerWidth)return{w:t.innerWidth,h:t.innerHeight};var e=t.document;return"CSS1Compat"==document.compatMode?{w:e.documentElement.clientWidth,h:e.documentElement.clientHeight}:{w:e.body.clientWidth,h:e.body.clientHeight}}},p.prototype.declareEvents=function(t){ADTECH.event("RYOT_PARENT_META"),ADTECH.event("RYOT_RESIZE"),ADTECH.event("RYOT_CHILD_META")},p.prototype.preInit=function(){null!=window&&(window.com=com||{},com.adtech=window.com.adtech)},p.prototype.init=function(t){this.advert=t,this.elem.adContainer=t.assetContainers.main.anchorDiv,this.elem.adContent=t.assetContainers.main.anchorDiv.firstChild,this.elem.adIframe=this.elem.adContent.getElementsByTagName("iframe")[0],this.elem.adBody=document||this.elem.adIframe.contentWindow.document,this.lib={},this.lib.utils=l.com.adtech.Utils_$VERSION$,this.lib.globalEventBus=l.adtechAdManager_$VERSION$.globalEventBus,this.lib.richMediaEvent=l.com.adtech.RichMediaEvent_$VERSION$,this.metaData={},this.recieveMeta()},p.prototype.data={topPosition:0,scrollTop:0,winWidth:0,winHeight:0,docHeight:0},p.prototype.whenReady=function(){this.handleParentData(),this.sendMeta()},p.prototype.handleParentData=function(){this.setupScrollData(),this.getAdWrapperPosition(),this.setAdHeight(),this.setupResize()},p.prototype.dispatchEvent=function(t,e){var n=new this.lib.richMediaEvent(t),e=e||{};n.meta=e,this.advert.eventBus.dispatchEvent(n)},p.prototype.sendMeta=function(){var t=this;setInterval(function(){t.dispatchEvent("RYOT_PARENT_META",t.data)},100)},p.prototype.recieveMeta=function(){var t=this;this.advert.eventBus.addEventListener("RYOT_CHILD_META",function(e){t.data.docHeight=e.meta.docHeight,t.setAdHeight(e.meta.docHeight),t.whenReady()})},p.prototype.getAdWrapperPosition=function(){var t=this.elem.adContainer,e=document.body.getBoundingClientRect(),n=t.getBoundingClientRect(),i=n.top-e.top;this.data.topPosition=i},p.prototype.setupScrollData=function(){function t(){var t=document.documentElement;return(window.pageYOffset||t.scrollTop)-(t.clientTop||0)}function e(e){n.data.scrollTop=t()}var n=this;window.addEventListener("scroll",e,!1);t(),(new Date).getTime();this.data.scrollTop=t()},p.prototype.setupResize=function(){var t=this,e=t.getWindowSize();t.data.winWidth=e.width,t.data.winHeight=e.height,window.addEventListener("resize",function(){var e=t.getWindowSize();t.data.winWidth=e.width,t.data.winHeight=e.height,t.setAdHeight(t.data.docHeight),console.log("resize")},!0)},p.prototype.getWindowSize=function(){var t=window,e=document,n=e.documentElement,i=e.getElementsByTagName("body")[0];return{width:t.innerWidth||n.clientWidth||i.clientWidth,height:t.innerHeight||n.clientHeight||i.clientHeight}},p.prototype.setAdHeight=function(t){var e=this.elem.adContainer,n=this.elem.adContent,i=n.firstChild;this.elem.docBody;e.style.width="auto",e.style.height="auto",n.style.clip="",e.style.position="absolute",e.style.left=0,e.style.top=0,t!==this.data.docHeight&&(t=this.data.docHeight,e.style.height=t+"px",n.style.height=t+"px",i.style.height=t+"px")},l.adtechCallbackInstances=l.adtechCallbackInstances||[];var v=l.adtechCallbackInstances.length;l.adtechCallbackInstances[v]=new l.com.adtech.AdtechCustomAd$AD_ID$,l.adtechAdCallbacks=l.adtechAdCallbacks||{},l.adtechAdCallbacks[t.adServerVars.uid]=l.adtechAdCallbacks[t.adServerVars.uid]||[],l.adtechAdCallbacks[t.adServerVars.uid].push(l.adtechCallbackInstances[v])}(adtechAdConfig);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
