!function(e){if(!e.preview){e.assetContainers.main.isExpandable=!0;try{var t=!!window.frameElement,n=t?window.frameElement.parentNode.firstChild.firstChild.contentWindow:window;e.overrides=e.overrides||{},e.overrides.displayWindowTarget=n}catch(e){console.warn("Failed to find target iframe in player environment: Has the structure changed?\n",e)}}var a=!1;if(!e.overrides||e.overrides.displayWindowTarget!=self)for(var o in e.assetContainers)if(e.assetContainers.hasOwnProperty(o)){var i=e.assetContainers[o];if("inlineDiv"!=i.type||i.isExpandable){a=!0;break}}if(e.overrides&&e.overrides.displayWindowTarget){var r=e.overrides.displayWindowTarget;r="undefined"!=typeof adtechIframeHashArray&&self!=top?r.parent:r}else{for(var d=null,c=parent;void 0!=c;){try{var s=c.document;s&&(d=c)}catch(e){}c=c==top?null:c.parent}var r=d||top}var l=!1;try{var s=r.document;s&&(l=!0)}catch(e){}var v=a&&self!=top&&l?r:self;v.com=v.com||{},v.com.adtech=v.com.adtech||{},v.com.adtech.AdtechCustomAd$AD_ID$=function(){};var h=v.com.adtech.AdtechCustomAd$AD_ID$;h.prototype.elem={},h.prototype.elem.topWin=window.parent,h.prototype.elem.targetWindow=v,h.prototype.tools={events:{triggerEvent:function(e,t){var n;document.createEvent?(n=document.createEvent("HTMLEvents"),n.initEvent(t,!0,!0)):document.createEventObject&&(n=document.createEventObject(),n.eventType=t),n.eventName=t,e.dispatchEvent?e.dispatchEvent(n):e.fireEvent&&htmlEvents["on"+t]?e.fireEvent("on"+n.eventType,n):e[t]?e[t]():e["on"+t]&&e["on"+t]()},addEvent:function(e,t,n){e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent&&htmlEvents["on"+t]?e.attachEvent("on"+t,n):e["on"+t]=n},removeEvent:function(e,t,n){e.removeventListener?e.removeEventListener(t,n,!1):e.detachEvent&&htmlEvents["on"+t]?e.detachEvent("on"+t,n):e["on"+t]=null}},mask:function(e,t){},getPercentage:function(e,t){return e/100*t},getSizeStyle:function(e,t){var n=(this.tools,{}),a=parseInt(e,10),e=e.split(a)[1];return data={num:isNaN(parseFloat(a))?0:a,val:void 0!==e?e:"px"},"%"==data.val?(n.px=Math.round(t/100*data.num),n.percent=data.num):(n.px=data.num,n.percent=data.num/t*100),n},getViewportSize:function(e){if(e=e||window,null!=e.innerWidth)return{w:e.innerWidth,h:e.innerHeight};var t=e.document;return"CSS1Compat"==document.compatMode?{w:t.documentElement.clientWidth,h:t.documentElement.clientHeight}:{w:t.body.clientWidth,h:t.body.clientHeight}}},h.prototype.declareEvents=function(e){ADTECH.event("RYOT_META"),ADTECH.event("RYOT_RESIZE"),ADTECH.event("FIRE_RYOT_RESIZE")},h.prototype.preInit=function(){null!=window&&(window.com=com||{},com.adtech=window.com.adtech)},h.prototype.init=function(e){var t=this;this.advert=e,this.elem.adContainer=e.assetContainers.main.anchorDiv,this.elem.adContent=e.assetContainers.main.anchorDiv.firstChild,this.elem.adIframe=this.elem.adContent.firstChild,this.elem.adBody=document||this.elem.adIframe.contentWindow.document,this.data={},this.data.utils=v.com.adtech.Utils_$VERSION$,this.data.globalEventBus=v.adtechAdManager_$VERSION$.globalEventBus,this.data.richMediaEvent=v.com.adtech.RichMediaEvent_$VERSION$,this.metaData={},this.setupScrollData(),setInterval(function(){var e=new t.data.richMediaEvent("RYOT_META");e.meta={metaData:t.metaData},t.advert.eventBus.dispatchEvent(e)},100)},h.prototype.getIframePosition=function(){var e=this.elem.iframe,t=this.elem.adBody.getBoundingClientRect(),n=e.getBoundingClientRect(),a=n.top-t.top;this.metaData.topPosition=a},h.prototype.setupScrollData=function(){function e(){var e=document.documentElement;return(window.pageYOffset||e.scrollTop)-(e.clientTop||0)}function t(t){n.metaData.scrollTop=e()}var n=this;window.addEventListener("scroll",t,!1);e(),(new Date).getTime();this.metaData.scrollTop=e()},v.adtechCallbackInstances=v.adtechCallbackInstances||[];var m=v.adtechCallbackInstances.length;v.adtechCallbackInstances[m]=new v.com.adtech.AdtechCustomAd$AD_ID$,v.adtechAdCallbacks=v.adtechAdCallbacks||{},v.adtechAdCallbacks[e.adServerVars.uid]=v.adtechAdCallbacks[e.adServerVars.uid]||[],v.adtechAdCallbacks[e.adServerVars.uid].push(v.adtechCallbackInstances[m])}(adtechAdConfig);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
